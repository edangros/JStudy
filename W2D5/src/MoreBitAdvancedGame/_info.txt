
/*
W2D3 LittleBitAdvancedGame과 달라진 부분 :
클라이언트님께서 컴플레인을 거셨습니다.
인벤토리 창을 만들어서 화살의 아이템 설명을 보여주고 싶은데 화살 데이터베이스가 왜 없냐고 따지십니다.
또 몬스터 방어력 깎는 독화살도 원한다고 하십니다. 독화살을 맞은 상태에서 공격받을 시 데미지 1을 추가로 입어야 한대요.
심지어 독화살 효과를 3번 중첩까지 되게 하랩니다.
또, 플레이어 기본 공격력 10을 추가하고, 플레이어가 몬스터를 잡을 때마다 레벨업해서 공격력이 5씩 증가해야 한다 합니다.
...하아


이제부터 정말 게임같아지는 구조입니다.
제가 알만툴(RPG Maker, 유튜브에서 '쯔꾸르'라고 부르는 그거) 스크립트 짤때 봤던 구조를 배낄건데, 시간 되면 한번 깔아서 보여드릴게요
알만툴 xp버전은 2000년대 초반에 나왔고 덕분에 개체지향을 하다 말았습니다.(SRP와 OCP가 아주 잘 안지켜져있습니다.)
알만툴 VX버전부터는 좀 나아졌는데, 알만툴 MV버전에서는 엔진 바꾸면서 다시 쓰레기가 되어버렸...


1. 플레이어 개체를 추가합니다.
플레이어는 게임 내에 '하나밖에' 없을 테니 Static 클래스로 정의할 겁니다.
플레이어 개체는 현재 각 슬롯별로 착용중인 아이탬을 자신의 속성으로 가집니다.
그런데, 조만간 클라이언트님께서 몬스터가 플레이어를 공격할 수도 있게 만들어달라 할 삘입니다. 이걸 감안해서

2. Character 개체를 추가하고, 플레이어와 몬스터 모두 Character 개체를 상속받게 합니다.
Character는 '맞고 때릴 수 있는 개체'입니다.
최대 체력과 공격력, 방어력 등의 'data' 스탯과 현재 체력과 공격력, 방어력 등의 'current' 스텟을 가집니다.
동시에 'status'라는 상태이상 개체를 추가합시다.(독화살...독화살....!)

3. 활과 화살의 캡슐화가 덜되어있었습니다. 활에만 있는 메서드를 활 밖에서 사용해야 했습니다. 이를 해결합니다.
플레이어 개체가 추가되었으니 활과 화살은 플레이어의 '아이탬 슬롯'에 저장할 수 있겠네요
따라서 이제 활은 자기가 쏘는 화살을 기억할 필요가 없습니다. 플레이어가 들고 있으니까요
화살도 자기가 쏘는 활을 기억할 필요가 없습니다. 플레이어가 들고 있으니까요.
그저 플레이어가 누구인지만 알면 됩니다.

4. status 개체는 상당히 독특합니다. status 개체는 몬스터가 맞았을 시 발동해야 하므로, 몬스터 개체가 공격받을 시 활성화됩니다.
이를 '옵저버 패턴' 또는 '이벤트 모델'이라고 하는데
-옵저버 패턴 : A는 B가 뭔 일이 나기만을 '관찰하고' 있다. B가 뭔 일이 나면 A는 지정된 효과를 실행한다.
-이벤트 모델 : B는 뭔 일이 나는 '이벤트'를 가지고 있다. 이 '이벤트'의 '배송지'에 A를 추가하여 뭔 일이 나면 A의 지정된 효과가 실행되게 한다
-(또는 구독모델(Subscription model)이라고 부릅니다. A는 B에게 구독신청을 하고 B는 새로 출간된 잡지를 모든 A에게 전달
-딜리게이트Delegate 패턴도 거의 똑같습니다. 하나씩 검색해보세요
이러한 이벤트 모델을 다루는 개체는 아주 대표적으로 프로그램의 '버튼'이 있습니다.
(일반적으로 버튼은 마우스 올라감, 마우스 내려감, 버튼에 마우스 누름, 버튼에 눌러졌던 마우스 버튼 떼어짐의 4개 이벤트를 기본으로 가짐)
몬스터는 내부적으로 자신의 상태이상 리스트 statuslist를 가집니다.
status는 몬스터의 statuslist에 등록될 때, 자신이 필요한 이벤트(여기서는 몬스터 공격받음)을 구독받습니다.
몬스터가 지정된 이벤트를 발생시키면, status 개체는 자신이 부여된 몬스터에게 영향을 줍니다.
여기서는 몬스터 공격받음 이벤트를 status가 구독해서 몬스터에게 데미지를 주겠네요
그러면 status개체는
-자신이 영향을 줄 몬스터를 인자로 가지고 있어야 함
-영향을 줄 메서드를 가지고 있어야 하는데 이는 '밖에서는 표준적인 규격'으로 보여야 함. (인터페이스!!!!)
 */

